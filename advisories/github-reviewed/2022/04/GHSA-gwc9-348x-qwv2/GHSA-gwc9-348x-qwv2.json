{
  "schema_version": "1.2.0",
  "id": "GHSA-gwc9-348x-qwv2",
  "modified": "2022-04-01T13:36:12Z",
  "published": "2022-04-01T13:36:12Z",
  "aliases": [
    "CVE-2022-24791"
  ],
  "summary": "Use after free in Wasmtime",
  "details": "### Impact\n<!-- _What kind of vulnerability is it? Who is impacted?_ -->\n\nThere is a use after free vulnerability in Wasmtime when both running Wasm that uses `externref`s and enabling [epoch interruption](https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption) in Wasmtime. If you are not explicitly enabling epoch interruption (it is disabled by default) then you are not affected. If you are explicitly disabling the Wasm reference types proposal (it is enabled by default) then you are also not affected.\n\nThe use after free is caused by Cranelift failing to emit stack maps when there are safepoints inside cold blocks. Cold blocks occur when epoch interruption is enabled. Cold blocks are emitted at the end of compiled functions, and change the order blocks are emitted versus defined. This reordering accidentally caused Cranelift to skip emitting some stack maps because it expected to emit the stack maps in block definition order, rather than block emission order. When Wasmtime would eventually collect garbage, it would fail to find live references on the stack because of the missing stack maps, think that they were unreferenced garbage, and therefore reclaim them. Then after the collection ended, the Wasm code could use the reclaimed-too-early references, which is a use after free.\n\nThis bug was discovered while extending our fuzz targets for `externref`s and GC in Wasmtime. The updated fuzz target thoroughly exercises these code paths and feature combinations now. We have also added a regression test for this bug.\n\n### Patches\n<!-- _Has the problem been patched? What versions should users upgrade to?_ -->\n\nWe have released versions 0.34.2 and 0.35.2, which fix the vulnerability. We recommend all Wasmtime users upgrade to these patched versions.\n\n### Workarounds\n<!-- _Is there a way for users to fix or remediate the vulnerability without upgrading?_ -->\n\nIf upgrading is not an option for you at this time, you can avoid the vulnerability by either\n\n* [disabling the Wasm reference types proposal](https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.wasm_reference_types)\n\n  ```rust\n  config.wasm_reference_types(false);\n  ```\n\n* or by [disabling epoch interruption](https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption) if you were previously enabling it.\n\n  ```rust\n  config.epoch_interruption(false);\n  ```\n\n### References\n<!-- _Are there any links users can visit to find out more?_ -->\n\n* [The WebAssembly reference types proposal, which introduces `externref`s](https://github.com/WebAssembly/reference-types)\n* [Documentation about epoch interruption in Wasmtime](https://docs.rs/wasmtime/latest/wasmtime/struct.Config.html#method.epoch_interruption)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to us on [the Bytecode Alliance Zulip chat](https://bytecodealliance.zulipchat.com/#narrow/stream/217126-wasmtime)\n* Open an issue in [the `bytecodealliance/wasmtime` repository](https://github.com/bytecodealliance/wasmtime/)",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "wasmtime"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.34.2"
            }
          ]
        }
      ]
    },
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "wasmtime"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0.35.0"
            },
            {
              "fixed": "0.35.2"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/security/advisories/GHSA-gwc9-348x-qwv2"
    },
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-24791"
    },
    {
      "type": "WEB",
      "url": "https://github.com/bytecodealliance/wasmtime/commit/666c2554ea0e1728c35aa41178cf235920db888a"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/bytecodealliance/wasmtime"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-416"
    ],
    "severity": "HIGH",
    "github_reviewed": true
  }
}